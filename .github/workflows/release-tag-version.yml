name: release-tag-version

on:
  push:
    tags:
      - "v*"
      - "!v*-rc*"
      - "!v*-dev"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  binary:
    # 使用 matrix 针对不同架构和操作系统选择不同的 runner
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            runner: ubuntu-latest
          - goos: linux
            goarch: arm64
            runner: ubuntu-latest
          - goos: darwin
            goarch: amd64
            runner: macos-latest
          - goos: darwin
            goarch: arm64
            runner: macos-latest
    runs-on: ${{ matrix.runner }}
    permissions:
      packages: write  # 用于发布到 ghcr.io
    steps:
      - uses: actions/checkout@v4
      - name: Fetch tags
        run: git fetch --unshallow --quiet --tags --force
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Build for ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
        run: |
          echo "编译: $GOOS-$GOARCH..."
          mkdir -p dist/release
          BINARY=hertz_service_${GOOS}_${GOARCH}
          [ "$GOOS" = "windows" ] && BINARY="$BINARY.exe"
          go build -ldflags '-w -s' -o dist/release/$BINARY
          echo "压缩: $BINARY.tar.xz"
          tar -cJf dist/release/${BINARY}.tar.xz -C dist/release ${BINARY}
      - name: Generate checksums
        run: |
          echo "生成 MD5 校验..."
          for f in dist/release/*; do
            [ -f "$f" ] && md5sum "$f" > "$f.md5"
          done
      - name: Create GitHub release assets
        run: |
          gh release upload ${{ github.ref_name }} dist/release/* --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
  docker-rootful:
    runs-on: ubuntu-latest
    permissions:
      packages: write # to publish to ghcr.io
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --unshallow --quiet --tags --force
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |-
            buyfakett/learn-hertz
            ghcr.io/buyfakett/learn-hertz
          # this will generate tags in the following format:
          # latest
          # 1
          # 1.2
          # 1.2.3
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR using PAT
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build rootful docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/riscv64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}